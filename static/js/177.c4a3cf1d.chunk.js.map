{"version":3,"file":"static/js/177.c4a3cf1d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  max-width: 320px;\n`;\n\nexport const Field = styled(FormikField)`\n  \n  /* font: inherit; */\n  border: 3px solid #eac645;\nborder-radius: 25px;\nwidth:250px;\npadding: 4px 10px;\nbackground: white; \n&:hover, &:focus {\n  /* border: 3px solid #404BBF;\n  border-radius: 25px; */\n  /* color: #404BBF; */\n  outline: none;\n  background: white; \n  }\n\n   \n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: #eac645;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const ContactAddButton = styled.button`\n color: #eac645;\n  font-size: 18px;\n  font-weight: 700;\n  text-decoration: none;\n  padding: 10px 20px;\n  margin: 0 auto;\n  margin-top: 30px;\n  border: 2px solid #eac645;\n  width: 150px; \n  height: 50px; \n  border-radius: 25px;   \n  background-color: #392f2f;\n  transition: all 0.3s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: #eac645;\n    color: white;}`\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, FormGroup, ErrorMessage, ContactAddButton } from \"./ContactForm.styled\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/api';\nimport { selectContacts } from 'redux/selectors';\n\nconst contactScheme = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Please enter the name'),\n  number: Yup.string()\n    .matches(/^\\d{3}-\\d{3}-\\d{2}$/, 'Invalid format, requared XXX-XXX-XX')\n    .required('Please enter the number, format XXX-XXX-XX'),\n});\n\nexport const ContactForm = () => { \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n \n  const handleSubmit = values => {\n    \n    const duplicate = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (duplicate) {\n      return alert(`${values.name} is already in contacts`);\n    }\n    dispatch(addContact(values));\n   \n  };\n  \n   \n  \n  \n  return (\n    <div>\n    \n      <Formik\n        \n      initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          handleSubmit(values);\n          actions.resetForm();\n        }}\n         \n     validationSchema={contactScheme}\n \n      \n    >\n      <Form>\n       <FormGroup htmlFor=\"name\">\n         Name\n       <Field id=\"name\" name=\"name\" placeholder=\"Jane\" />\n       <ErrorMessage name=\"name\" component=\"div\"/>\n        </FormGroup>\n\n        <FormGroup htmlFor=\"number\">Number\n         <Field id=\"number\" name=\"number\" placeholder=\"XXX-XXX-XX\" />\n         <ErrorMessage name=\"number\" component=\"div\"/>\n</FormGroup>\n        <ContactAddButton type=\"submit\">Add Contact</ContactAddButton>\n      </Form>\n    </Formik>\n    </div>\n  )\n\n\n}","import styled from 'styled-components';\n\nexport const ContactFilterWrapper = styled.div`\n/* width: 400px; */\ndisplay: flex;\nflex-direction: column;\n\n`;\n\nexport const ContactFilterButton = styled.button`\ncolor: #eac645;\n  font-size: 18px;\n  font-weight: 700;\n  text-decoration: none;\n  padding: 10px 20px;\n  border: 2px solid #eac645;\n  width: 150px; \n  height: 50px; \n  border-radius: 25px;   \n  background-color: #392f2f;\n  transition: all 0.3s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* margin-top: 30px; */\n  margin:  30px auto 0;\n\n  &:hover {\n    background-color: #eac645;\n    color: white;}\n`;\n\nexport const ContactFilterInput = styled.input`\n font: inherit;\n  border: 3px solid #eac645;\nborder-radius: 25px;\nwidth:250px;\npadding: 4px 10px;\nbackground: white; \n&:hover, &:focus {\n  outline: none;\n  background: white;  \n  }\n\n`\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { ContactFilterWrapper, ContactFilterButton, ContactFilterInput } from \"./ContactFilter.styled\";\nimport { changeFilter, resetFilter } from \"redux/filterSlice\";\n\nexport const ContactFilter = () => {\nconst dispatch = useDispatch();\nconst value = useSelector(state => state.filter.filter);\n  \n  const onChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(changeFilter(filter));\n  };\n\n  const onReset = e => {\n    dispatch(resetFilter())\n  };\n\n\n\n  return (\n    <ContactFilterWrapper>\n      <ContactFilterInput\n        type=\"text\"\n        \n        value={value}\n        onChange={onChange}\n        placeholder=\"SEARCH\"\n      />\n      \n      <ContactFilterButton type = \"button\" onClick={onReset}>Reset search</ContactFilterButton>\n    </ContactFilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const ContactCardWrappper = styled.div`\nborder: 3px solid #392f2f;\nborder-radius: 25px;\ndisplay: flex;\njustify-content: space-between;\nheight: 70px;\nwidth: 400px;\nalign-items: center;\npadding:5px;\n`;\n\nexport const ContactValuedWrappper = styled.div`\ndisplay: flex;\ngap: 12px;\n`\n\n\nexport const ContactCardValue = styled.p`\nfont-size: 20px;\nfont-weight: 700;\n`;\n\nexport const ContactCardDelButton = styled.button`\ncolor: #eac645;\n  font-size: 14px;\n  font-weight: 700;\n  text-decoration: none;\n  padding: 5px 5px;\n \n  border: 2px solid #eac645;\n  width: 100px; \n  /* height: 50px;  */\n  border-radius: 25px;   \n  background-color: #392f2f;\n  transition: all 0.3s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: #eac645;\n    color: white;}\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","\nimport { HiOutlineDevicePhoneMobile } from \"react-icons/hi2\";\nimport { ContactCardWrappper, ContactCardValue, ContactCardDelButton,ContactValuedWrappper, IconWrapper } from './ContactCard.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/api';\n\nexport const ContactCard = ({ name, number, id}) => {\n    const dispatch = useDispatch();\n    \n    \n    const onDelete = () => {\n        dispatch(deleteContact(id));\n    };\n    \n      \n    return (\n    <>\n        <ContactCardWrappper>\n                <ContactValuedWrappper>\n                    <IconWrapper>\n                        <HiOutlineDevicePhoneMobile />\n                        </IconWrapper>\n                <ContactCardValue>{name} : {number}</ContactCardValue>\n                </ContactValuedWrappper>\n            <ContactCardDelButton onClick={onDelete}>Delete</ContactCardDelButton>\n        </ContactCardWrappper>\n        \n    </>)\n}","import styled from 'styled-components';\n\nexport const ContactCardItem = styled.li`\nmargin-bottom: 10px;\n\n`\n\nexport const ContactListStyle = styled.ul`\nlist-style: none;\ndisplay: flex;\ngap: 20px;\nalign-items: center;\n`\n\n\n","import { ContactCard } from \"components/ContactCard/ContactCard\";\nimport { ContactCardItem, ContactListStyle } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectContacts } from 'redux/selectors';\nimport { selectFilter } from 'redux/selectors';\n\n\nexport const ContactList = () => { \n    const contacts = useSelector(selectContacts)||[];\n    const filter = useSelector(selectFilter)||'';\n    \n    const visibleContacts = () => {\n        return contacts.filter(({ name }) =>\n      name\n        .split(' ')\n        .join('')\n        .toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase())\n    );\n  };\n      \n    return (\n        <>\n            <ContactListStyle>\n                {visibleContacts().map(({ name, number, id }) =>\n                    <ContactCardItem key={id}><ContactCard name={name} number={number} id={id} />\n                    </ContactCardItem>)}\n            </ContactListStyle>\n    \n    \n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const ContactFormBox = styled.div`\n  margin: 0 10px 20px 10px;\n  width: 300px;\n  border-bottom: 1px solid #2a363b;\n  background-color: #392f2f;\n  border: 3px solid #eac645;\n  border-radius: 30px;\n  padding: 10px 20px 30px 20px;\n  display: flex;\n  flex-direction: column;\n  gap:60px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.768), 0 16px 20px rgba(39, 37, 37, 0.2);\n\n\n\n`;\nexport const ContactListBox = styled.div`\n\n\n\n`;\n\nexport const ContactPageBox = styled.div`\ndisplay: flex;\ngap: 20px;\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/api';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Spinner } from '@chakra-ui/react';\nimport { selectIsLoading } from 'redux/selectors';\nimport { ContactFormBox, ContactListBox, ContactPageBox } from './Contacts.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactPageBox>\n      <ContactFormBox>\n      <ContactForm />\n        <ContactFilter />\n      </ContactFormBox>\n      <ContactListBox>\n        {isLoading ? <Spinner color=\"orange.500\" /> : <ContactList />}\n      </ContactListBox>\n    </ContactPageBox>\n  );\n}"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","ContactAddButton","_templateObject5","contactScheme","Yup","shape","name","min","max","required","number","matches","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_jsx","children","Formik","initialValues","onSubmit","values","actions","some","_ref","toLowerCase","alert","concat","addContact","handleSubmit","resetForm","validationSchema","_jsxs","htmlFor","id","placeholder","component","type","ContactFilterWrapper","ContactFilterButton","ContactFilterInput","ContactFilter","value","state","filter","onChange","e","currentTarget","changeFilter","onClick","resetFilter","ContactCardWrappper","ContactValuedWrappper","ContactCardValue","ContactCardDelButton","IconWrapper","ContactCard","_Fragment","HiOutlineDevicePhoneMobile","deleteContact","ContactCardItem","ContactListStyle","ContactList","selectFilter","split","join","toLocaleLowerCase","includes","map","_ref2","ContactFormBox","ContactListBox","ContactPageBox","ContactsPage","isLoading","selectIsLoading","useEffect","fetchContacts","Spinner","color"],"sourceRoot":""}